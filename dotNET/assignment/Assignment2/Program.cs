using Employee;
using System.Runtime.CompilerServices;

namespace Employee
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Employee emp1 = new Employee("Suraj", 89000, 1);
            Employee emp2 = new Employee("Rohan", 89000);
            Employee emp3 = new Employee("Sujit");
            Employee emp4 = new Employee();
            Console.WriteLine(emp1);
            Console.WriteLine(emp2);
            Console.WriteLine(emp3);
            Console.WriteLine(emp4);
        }
    }

    public class Employee {
        private static int empNoCounter = 1 ;
        private int empNo;
        private string name;
        private decimal basic;
        private short deptNo;

        public Employee() {
            this.empNo = empNoCounter++;
        }
        public Employee(string name, decimal basic=45000, short deptNo=3) {
            this.empNo = empNoCounter++;
            Name = name;
            Basic = basic;
            DeptNo = deptNo;
        }

        public int EmpNo
        {
            get { 
                return empNo; 
            }
        }
        public string Name {
            set { 
                if(value.Trim().Length != 0 )
                    name = value;
                else
                    Console.WriteLine("Name cannot be blank");
            }
            get {
                return name;        
            } 
        }

        public decimal Basic { 
            set {
                if (value > 30000 && value <= 900000)
                    basic = value;
                else
                    Console.WriteLine("basic should be between 30000 and 90000");
            }   
            get {
                return basic; 
            }
        }

        public short DeptNo
        {
            set {
                if (value > 0)
                    deptNo = value;
                else
                    Console.WriteLine("dept no should be greater than 0 ");
            }
            get
            {
                return deptNo;  
            }
        }

        public decimal GetNetSalary()
        {
            decimal netSalary = Decimal.Multiply(1.2m, basic);
            return 1.2m * basic;
        }

        public override string ToString() { 
            return  "Employee no: " + EmpNo + " Name  " + Name + " Basic "+ Basic +  " Dept " + DeptNo ;
        }
    }
}




//Create a Class Employee with the following specifications

//Properties
//----------
//string Name -> no blank names should be allowed
//int EmpNo ->  must be readonly and autogenerated
//decimal Basic -> must be between some range
//short DeptNo -> must be > 0

//Methods
//-------
//decimal GetNetSalary() -> returns calculated net salary (Use any formula to get net salary based on Basic salary)


//Create constructors to accept initial values for Employee obj
//Employee o1 = new Employee("Amol", 123465, 10);
//Employee o2 = new Employee("Amol", 123465);
//Employee o3 = new Employee("Amol");
//Employee o4 = new Employee();

//EmpNo must be autogenerated ... i.e.
//first object should automatically get EmpNo 1
//second object should automatically get EmpNo 2
//third object should automatically get EmpNo 3
//...and so on...

//Test Cases
//Employee o1 = new Employee()
//Employee o2 = new Employee()
//Employee o3 = new Employee()
//cw(o1.EmpNo)
//cw(o2.EmpNo)
//cw(o3.EmpNo)

//cw(o3.EmpNo)
//cw(o2.EmpNo)
//cw(o1.EmpNo)